/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.UUID;
import util.DataBaseHandler;
import util.Labels;
import util.Note;

/**
 *
 * @author josef
 */
public class MainFrame extends javax.swing.JFrame {

    private final DataBaseHandler dataBaseHandler;
    private long id = -1;
    private boolean edit = false;
    private boolean editTitle = false;
    private boolean editMessage = false;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        dataBaseHandler = DataBaseHandler.getInstance();
        loadDataDummy();
        listNotes.setListData(loadTitleNotesList());
        buttonDelete.setVisible(false);
        onUI(false);
        clearData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonAddNote = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        notesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listNotes = new javax.swing.JList<>();
        panelNote = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        buttonSaveNote = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaNote = new javax.swing.JTextArea();
        fieldTitle = new javax.swing.JTextField();
        labelDateCreate = new javax.swing.JLabel();
        labelEdited = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NotX");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonAddNote.setText("Agregar +");
        buttonAddNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddNoteActionPerformed(evt);
            }
        });

        buttonDelete.setText("Borrar Nota");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAddNote)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddNote)
                    .addComponent(buttonDelete))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        notesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Notas"));

        listNotes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listNotesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listNotes);

        javax.swing.GroupLayout notesPanelLayout = new javax.swing.GroupLayout(notesPanel);
        notesPanel.setLayout(notesPanelLayout);
        notesPanelLayout.setHorizontalGroup(
            notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
        );
        notesPanelLayout.setVerticalGroup(
            notesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        panelNote.setBorder(javax.swing.BorderFactory.createTitledBorder("Escribir Nota"));

        buttonSaveNote.setText("Guardar");
        buttonSaveNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveNoteActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancelar");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(buttonCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSaveNote)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSaveNote)
                    .addComponent(buttonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        areaNote.setColumns(20);
        areaNote.setRows(5);
        areaNote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                areaNoteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(areaNote);

        fieldTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldTitleMouseClicked(evt);
            }
        });

        labelEdited.setToolTipText("");

        javax.swing.GroupLayout panelNoteLayout = new javax.swing.GroupLayout(panelNote);
        panelNote.setLayout(panelNoteLayout);
        panelNoteLayout.setHorizontalGroup(
            panelNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelNoteLayout.createSequentialGroup()
                .addGroup(panelNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(fieldTitle)
                    .addGroup(panelNoteLayout.createSequentialGroup()
                        .addComponent(labelDateCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelEdited)))
                .addContainerGap())
        );
        panelNoteLayout.setVerticalGroup(
            panelNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNoteLayout.createSequentialGroup()
                .addComponent(fieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDateCreate)
                    .addComponent(labelEdited))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(notesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddNoteActionPerformed
        edit = false;
        clearData();
        onUI(true);
        buttonDelete.setVisible(false);
        loadTitleNotesList();
        resetClearFields();
        
    }//GEN-LAST:event_buttonAddNoteActionPerformed

    private void buttonSaveNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveNoteActionPerformed
        saveNote();
        onUI(false);
        clearData();
        loadTitleNotesList();
    }//GEN-LAST:event_buttonSaveNoteActionPerformed

    private void listNotesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listNotesMouseClicked
        id = listNotes.getSelectedIndex();
        edit = true;
        buttonDelete.setVisible(true);
        onUI(true);
        loadNote();
    }//GEN-LAST:event_listNotesMouseClicked

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        dataBaseHandler.deleteElement(id);
        loadTitleNotesList();
        clearData();
        onUI(false);
        buttonDelete.setVisible(false);
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        resetClearFields();
        clearData();
        onUI(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void fieldTitleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldTitleMouseClicked

        if (!editTitle) {
            fieldTitle.setText("");
            editTitle = true;
        }
    }//GEN-LAST:event_fieldTitleMouseClicked

    private void areaNoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaNoteMouseClicked
        if (!editMessage) {
            areaNote.setText("");
            editMessage = true;
        }
    }//GEN-LAST:event_areaNoteMouseClicked

    private void saveNote() {

        String title = fieldTitle.getText();
        String message = areaNote.getText();

        if (!title.isEmpty() && !message.isEmpty()
                && !title.equals(Labels.TITLE) && !areaNote.getText().equals(Labels.MESSAGE_NOTE)) {
            
            if (!edit) {
                dataBaseHandler.insetElement(new Note(title, message));
            } else {
                dataBaseHandler.updateElement(new Note(title, message, LocalDate.now().toString(), id));
            }

        }
    }

    private void loadNote() {
        Note note = dataBaseHandler.getElement(listNotes.getSelectedIndex());
        fieldTitle.setText(note.getTitle());
        areaNote.setText(note.getMessage());
        labelDateCreate.setText(Labels.ADDED_NOTE + note.getDateCreate());

        if (note.getDateEdit() != null) {
            labelEdited.setText(Labels.EDITED_NOTE + note.getDateEdit());
        }

    }

    private void clearData() {
        fieldTitle.setText(Labels.TITLE);
        areaNote.setText(Labels.MESSAGE_NOTE);
        labelDateCreate.setText("");
        labelEdited.setText("");
    }

    private String[] loadTitleNotesList() {
        ArrayList<Note> n = dataBaseHandler.getAllElements();
        String[] ns = new String[n.size()];

        for (int i = 0; i < n.size(); i++) {
            ns[i] = n.get(i).getTitle();
        }
        listNotes.setListData(ns);
        return ns;
    }

    private void onUI(boolean status) {
        fieldTitle.setEnabled(status);
        areaNote.setEnabled(status);
    }

    private void resetClearFields() {
        editMessage = false;
        editTitle = false;
        this.id = -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaNote;
    private javax.swing.JButton buttonAddNote;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSaveNote;
    private javax.swing.JTextField fieldTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDateCreate;
    private javax.swing.JLabel labelEdited;
    private javax.swing.JList<String> listNotes;
    private javax.swing.JPanel notesPanel;
    private javax.swing.JPanel panelNote;
    // End of variables declaration//GEN-END:variables

    private void loadDataDummy() {

        for (int i = 0; i < 3; i++) {
            dataBaseHandler.insetElement((new Note("Titulo " + (i + 1),
                    "Mensaje " + UUID.randomUUID().toString())));
        }
    }
}
